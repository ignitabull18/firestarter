version: '3.8'

services:
  firestarter:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_URL=${NEXT_PUBLIC_URL:-https://firestarter.ignitabull.org}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - UPSTASH_SEARCH_REST_URL=${UPSTASH_SEARCH_REST_URL}
      - UPSTASH_SEARCH_REST_TOKEN=${UPSTASH_SEARCH_REST_TOKEN}
      - UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL}
      - UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN}
      - NEXT_PUBLIC_UPSTASH_REDIS_REST_URL=${NEXT_PUBLIC_UPSTASH_REDIS_REST_URL}
      - NEXT_PUBLIC_UPSTASH_REDIS_REST_TOKEN=${NEXT_PUBLIC_UPSTASH_REDIS_REST_TOKEN}
      - DISABLE_CHATBOT_CREATION=${DISABLE_CHATBOT_CREATION:-false}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/check-env"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Optional: Redis service for local development
# Uncomment if you want to run Redis locally instead of using Upstash
#  redis:
#    image: redis:7-alpine
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#    restart: unless-stopped
#    command: redis-server --appendonly yes

#volumes:
#  redis_data: 